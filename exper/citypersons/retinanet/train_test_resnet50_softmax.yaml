batch_size: 2 # can be larger than 1
datasetname: citypersons
data_dir: ./data/citypersons
split: train
split_test: val
is_training: True
model_type: 'retinanet'
backbone: 'resnet50' # or 'resnet101'
# restore: ''
display: 10
log_image: 100 # logging detection results in tensorboard every 100 iterations
data_workers: 4 # how many threads that are used for loading training data

use_focal_loss: True
num_classes: 2 # ('__background__', 'pedestrian', 'rider', 'sitting', 'unusual', 'group')
class_activation: 'softmax'
rpn_sample_strategy: 'simple' # 'traditional', 'simple', 'advanced'
rpn_box_encoding: 'fastrcnn' # 'linear', 'fastrcnn'
rpn_bg_threshold: 0.5
rpn_fg_threshold: 0.6
min_side: 1024
max_side: 2048
canvas_width: 2048
canvas_height: 1024
use_augment: False
training_scale: [0.8, 1.0, 1.25] # used only when use_augment is true

strides: [8, 16, 32, 64, 128]
f_keys: ['C3', 'C4', 'C5', 'C6', 'C7']
in_channels: [512, 1024, 2048, 256, 256]

## finer anchors, no intersection cross layers
max_epoch: 15
weight_decay: 0.0005
lr: 0.001 # shrinking it if you find no right detections after 1k iterations
lr_decay_epoches: [8, 12, 16]
anchor_scales: [
    [2,  2.520,  3.175],
    [4,  5.040,  6.349],
    [8,  10.079, 12.700],
    [16, 20.159, 25.398],
    [32, 40.317, 50.797],
]
anchor_ratios: [1, 2.5] # height / width
anchor_base: 16
score_threshold: 0.5
max_det_num: 100
overlap_threshold: 0.5
with_segment: False

class_weights: []
segment_weights: []
start_over: False
